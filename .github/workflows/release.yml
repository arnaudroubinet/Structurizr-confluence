name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version
        id: vars
        run: |
          TAG=${GITHUB_REF_NAME}
          VERSION=${TAG#v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      - name: Install GraphViz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Build with Maven
        run: mvn -B --no-transfer-progress clean package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: structurizr-confluence-${{ steps.vars.outputs.version }}
          path: |
            target/structurizr-confluence-*.jar
            target/quarkus-app/**

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Structurizr Confluence ${{ steps.vars.outputs.version }}
          draft: false
          prerelease: false
          files: |
            target/structurizr-confluence-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/structurizr-confluence
          tags: |
            type=raw,value=${{ steps.vars.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
